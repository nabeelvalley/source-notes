{
  "version": 3,
  "sources": ["../src/extension.ts", "../src/utilities/getUri.ts", "../src/utilities/getNonce.ts"],
  "sourcesContent": ["import { commands, ExtensionContext, WebviewOptions, window, Range, ThemeColor, TextEdit, TextEditor } from \"vscode\";\n\nimport { Disposable, Webview, WebviewPanel, Uri, ViewColumn } from \"vscode\";\nimport { getUri } from \"./utilities/getUri\";\nimport { getNonce } from \"./utilities/getNonce\";\n\nconst html = String.raw\n\nconst view = (nonce: string, webviewUri: Uri, styleUri: Uri, codiconsUri: Uri) => html`\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Hello World!</title>\n    \n    <link rel=\"stylesheet\" href=\"${styleUri}?${nonce}\">\n    <link rel=\"stylesheet\" href=\"${codiconsUri}?${nonce}\">\n  <script type=\"module\" src=\"${webviewUri}?${nonce}\"></script>\n  </head>\n  <body>\n    <main>\n      <div class=\"header\">\n        <div>Add Note</div>\n        <div>\n          <vscode-button id=\"close\" appearance=\"icon\" aria-label=\"Confirm\">\n            <span class=\"codicon codicon-close\"></span>\n          </vscode-button>\n        </div>\n      </div>\n\n      <vscode-text-area id=\"note\" rows=5></vscode-text-area>\n      <vscode-button id=\"submit\">Create Note</vscode-button>\n    </main>\n  </body>\n</html>\n`\nconst webviewContent = (webview: Webview, extensionUri: Uri) => {\n  const webviewUri = getUri(webview, extensionUri, [\"out\", \"webview.js\"]);\n  const styleUri = getUri(webview, extensionUri, [\"src\", \"webview\", \"style.css\"]);\n  const codiconsUri = getUri(webview, extensionUri, ['node_modules', '@vscode/codicons', 'dist', 'codicon.css']);\n\n\n  const nonce = getNonce();\n\n  return view(nonce, webviewUri, styleUri, codiconsUri);\n}\n\n\nconst selectedTextDecorationType = window.createTextEditorDecorationType({\n  backgroundColor: new ThemeColor(\"peekViewResult.selectionBackground\"),\n});\n\nconst save = (editor: TextEditor, note: string) => {\n  console.log(editor, note)\n}\n\nexport function activate(context: ExtensionContext) {\n  const webviewOptions: WebviewOptions = {\n    enableForms: true,\n    enableScripts: true,\n    localResourceRoots: [\n      Uri.joinPath(context.extensionUri, \"out\"), \n      Uri.joinPath(context.extensionUri, \"src/webview\"), \n      Uri.joinPath(context.extensionUri, 'node_modules', '@vscode')],\n    enableCommandUris: true\n  }\n\n\n  const command = commands.registerCommand(\"source-notes.showHelloWorld\", () => {\n    const editor = window.activeTextEditor;\n\n    if (!editor) {\n      return;\n    }\n\n    const { start, end } = editor.selection\n\n    const decoration = { range: new Range(start, end) };\n    editor.setDecorations(selectedTextDecorationType, [decoration]);\n\n    const inset = window.createWebviewTextEditorInset(editor, end.line, 10, webviewOptions)\n    inset.webview.html = webviewContent(inset.webview, context.extensionUri)\n\n    inset.webview.onDidReceiveMessage(message => {\n      console.log(message)\n\n      if (message.type === 'submit') {\n        save(editor, message.note)\n      }\n\n      inset.dispose()\n      editor.setDecorations(selectedTextDecorationType, [])\n    })\n\n  });\n\n\n\n  // Add command to the extension context\n  context.subscriptions.push(command);\n}\n", "import { Uri, Webview } from \"vscode\";\n\n/**\n * A helper function which will get the webview URI of a given file or resource.\n *\n * @remarks This URI can be used within a webview's HTML as a link to the\n * given file/resource.\n *\n * @param webview A reference to the extension webview\n * @param extensionUri The URI of the directory containing the extension\n * @param pathList An array of strings representing the path to a file/resource\n * @returns A URI pointing to the file/resource\n */\nexport function getUri(webview: Webview, extensionUri: Uri, pathList: string[]) {\n  return webview.asWebviewUri(Uri.joinPath(extensionUri, ...pathList));\n}\n", "/**\n * A helper function that returns a unique alphanumeric identifier called a nonce.\n *\n * @remarks This function is primarily used to help enforce content security\n * policies for resources/scripts being executed in a webview context.\n *\n * @returns A nonce\n */\nexport function getNonce() {\n  let text = \"\";\n  const possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < 32; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAAA,iBAA4G;AAE5G,IAAAA,iBAAmE;;;ACFnE,oBAA6B;AAatB,SAAS,OAAO,SAAkB,cAAmB,UAAoB;AAC9E,SAAO,QAAQ,aAAa,kBAAI,SAAS,cAAc,GAAG,QAAQ,CAAC;AACrE;;;ACPO,SAAS,WAAW;AACzB,MAAI,OAAO;AACX,QAAM,WAAW;AACjB,WAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAC3B,YAAQ,SAAS,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,SAAS,MAAM,CAAC;AAAA,EACrE;AACA,SAAO;AACT;;;AFTA,IAAM,OAAO,OAAO;AAEpB,IAAM,OAAO,CAAC,OAAe,YAAiB,UAAe,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAQ/C,YAAY;AAAA,mCACZ,eAAe;AAAA,+BACnB,cAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB7C,IAAM,iBAAiB,CAAC,SAAkB,iBAAsB;AAC9D,QAAM,aAAa,OAAO,SAAS,cAAc,CAAC,OAAO,YAAY,CAAC;AACtE,QAAM,WAAW,OAAO,SAAS,cAAc,CAAC,OAAO,WAAW,WAAW,CAAC;AAC9E,QAAM,cAAc,OAAO,SAAS,cAAc,CAAC,gBAAgB,oBAAoB,QAAQ,aAAa,CAAC;AAG7G,QAAM,QAAQ,SAAS;AAEvB,SAAO,KAAK,OAAO,YAAY,UAAU,WAAW;AACtD;AAGA,IAAM,6BAA6B,sBAAO,+BAA+B;AAAA,EACvE,iBAAiB,IAAI,0BAAW,oCAAoC;AACtE,CAAC;AAED,IAAM,OAAO,CAAC,QAAoB,SAAiB;AACjD,UAAQ,IAAI,QAAQ,IAAI;AAC1B;AAEO,SAAS,SAAS,SAA2B;AAClD,QAAM,iBAAiC;AAAA,IACrC,aAAa;AAAA,IACb,eAAe;AAAA,IACf,oBAAoB;AAAA,MAClB,mBAAI,SAAS,QAAQ,cAAc,KAAK;AAAA,MACxC,mBAAI,SAAS,QAAQ,cAAc,aAAa;AAAA,MAChD,mBAAI,SAAS,QAAQ,cAAc,gBAAgB,SAAS;AAAA,IAAC;AAAA,IAC/D,mBAAmB;AAAA,EACrB;AAGA,QAAM,UAAU,wBAAS,gBAAgB,+BAA+B,MAAM;AAC5E,UAAM,SAAS,sBAAO;AAEtB,QAAI,CAAC,QAAQ;AACX;AAAA,IACF;AAEA,UAAM,EAAE,OAAO,IAAI,IAAI,OAAO;AAE9B,UAAM,aAAa,EAAE,OAAO,IAAI,qBAAM,OAAO,GAAG,EAAE;AAClD,WAAO,eAAe,4BAA4B,CAAC,UAAU,CAAC;AAE9D,UAAM,QAAQ,sBAAO,6BAA6B,QAAQ,IAAI,MAAM,IAAI,cAAc;AACtF,UAAM,QAAQ,OAAO,eAAe,MAAM,SAAS,QAAQ,YAAY;AAEvE,UAAM,QAAQ,oBAAoB,aAAW;AAC3C,cAAQ,IAAI,OAAO;AAEnB,UAAI,QAAQ,SAAS,UAAU;AAC7B,aAAK,QAAQ,QAAQ,IAAI;AAAA,MAC3B;AAEA,YAAM,QAAQ;AACd,aAAO,eAAe,4BAA4B,CAAC,CAAC;AAAA,IACtD,CAAC;AAAA,EAEH,CAAC;AAKD,UAAQ,cAAc,KAAK,OAAO;AACpC;",
  "names": ["import_vscode"]
}
